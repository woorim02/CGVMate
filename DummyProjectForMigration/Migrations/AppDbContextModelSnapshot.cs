// <auto-generated />
using System;
using CgvMate.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DummyProjectForMigration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("CgvMate.Data.Area", b =>
                {
                    b.Property<string>("AreaCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsGiveawayAreaCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TheaterCount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AreaCode");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CgvMate.Data.Movie", b =>
                {
                    b.Property<string>("Index")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieGroupCd")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailSource")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Index");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CgvMate.Data.OpenNotificationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanReservation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GiveawayIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieIndex")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScreenType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("TargetDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TheaterCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TheaterGiveawayInfoGiveawayIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TheaterGiveawayInfoTheaterCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieIndex");

                    b.HasIndex("TheaterGiveawayInfoTheaterCode", "TheaterGiveawayInfoGiveawayIndex");

                    b.ToTable("OpenNotificationInfos");
                });

            modelBuilder.Entity("CgvMate.Data.Theater", b =>
                {
                    b.Property<string>("TheaterCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TheaterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TheaterCode");

                    b.ToTable("Theaters");
                });

            modelBuilder.Entity("CgvMate.Data.TheaterGiveawayInfo", b =>
                {
                    b.Property<string>("TheaterCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("GiveawayIndex")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountTypeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EncCount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GiveawayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GiveawayRemainCount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiveTypeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TheaterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TheaterCode", "GiveawayIndex");

                    b.ToTable("TheaterGiveawayInfos");
                });

            modelBuilder.Entity("CgvMate.Data.OpenNotificationInfo", b =>
                {
                    b.HasOne("CgvMate.Data.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieIndex");

                    b.HasOne("CgvMate.Data.TheaterGiveawayInfo", "TheaterGiveawayInfo")
                        .WithMany()
                        .HasForeignKey("TheaterGiveawayInfoTheaterCode", "TheaterGiveawayInfoGiveawayIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("TheaterGiveawayInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
