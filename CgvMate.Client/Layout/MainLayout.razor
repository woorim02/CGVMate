@namespace CgvMate.Client.Layout
@inherits LayoutComponentBase
@using CgvMate.Client.Layout
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<Offcanvas />
<div class="page">
    <div class="navbar-container">
        <NavMenu />
        <div class="cgv-gradient" style="background-image: @(SetGradient())"></div>
    </div>
    <div class="body-container">
        <div class="sidebar-container shadow-sm">
            <Sidebar class="sidebar" IsOpen=true />
        </div>
        <main>
            @Body
        </main>
    </div>
</div>
@code {
    private bool isWebView;
    protected override async Task OnInitializedAsync()
    {
        Navigation.LocationChanged += OnLocationChanged;
        SetGradient();
        var environment = await JSRuntime.InvokeAsync<string>("detectEnvironment");
        isWebView = environment == "WebView";
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        SetGradient();
        InvokeAsync(StateHasChanged);
    }

    private string SetGradient()
    {
        var uri = Navigation.ToBaseRelativePath(Navigation.Uri).ToLower();
        if (uri.Contains("megabox"))
        {
            return "linear-gradient(to left, #503396, #503396)";
        }
        else if (uri.Contains("lotte"))
        {
            return "linear-gradient(to left, #FF1744, #FF1744)";
        }
        else
        {
            return "linear-gradient(to left, #ef642f, #fb4357)";
        }
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}