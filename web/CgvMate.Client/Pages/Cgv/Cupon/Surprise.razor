@using CgvMate.Components
@using CgvMate.Data.Entities.Cgv
@attribute [Route(Constants.event_cupon_surprise)]
@inject CgvMateApi api
@inject NavigationManager Navigation
@inject IJSRuntime Runtime

<PageTitle>서프라이즈 쿠폰 자동 확인</PageTitle>
<HeadContent>
    <meta name="keywords" content="소액 대출, 보험 계약 대출, 급여 대출, 비상금 대출, 학자금 대출, 할부, 당일 대출 가능한곳" />
</HeadContent>
<article class="article" id="speed-cupon-article">
    <header class="article-header">
        <div class="switch-container">
            <label id="toggle-switch-label" for="toggle_switch1">
                <span>서프라이즈 쿠폰 자동 확인</span>
                <span class="switch-wrap">
                    <ToggleSwitch id="toggle_switch1"
                        style="padding-left: 1rem; margin:auto; inline; float:right; width:40px; height:20px; "
                        OnChangeCallback="OnChange" />
                </span>
            </label>
        </div>
        <div class="select-container border-top">
            <select class="form-select" style="padding-left:0.5rem; margin-left:0.5rem" @bind=selectedCuponIndex>
                @for (int i = 0; i < Cupons.Count; i++)
                {
                    if (i == 0)
                    {
                        <option value="@Cupons[i].Index" selected>@Cupons[i].Title</option>
                        continue;
                    }
                    <option value="@Cupons[i].Index">@Cupons[i].Title</option>
                }
            </select>
        </div>
    </header>

    <section class="article-body">
        <script async
            src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2422895337222657"
            crossorigin="anonymous"></script>
        <!-- 하단 배너 -->
        <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-2422895337222657"
            data-ad-slot="2485625472" data-ad-format="auto" data-full-width-responsive="true"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
        <ul class="list-group">
            @foreach (var item in ProcessTexts)
            {
                <li>
                    <p class="list-group-item">
                        @((MarkupString)item)
                    </p>
                </li>
            }
        </ul>
    </section>
</article>

@code {
    private bool IsRunning { get; set; } = false;
    private List<SurpriseCupon> Cupons { get; set; } = new List<SurpriseCupon>(100);
    private List<string> ProcessTexts = new List<string>(100);

    private string? selectedCuponIndex;

    ~Surprise()
    {
        IsRunning = false;
    }

    protected override async Task OnInitializedAsync()
    {
        var cuponEvents = await api.GetEventListAsync(CgvEventType.Movie);
        Cupons.Clear();
        foreach (var e in cuponEvents)
        {
            if (!e.EventName.Contains("선착순 무료 쿠폰"))
            {
                continue;
            }
            var surpriseCupon  = new SurpriseCupon()
                {
                    Index = e.EventId,
                    Title = e.EventName,
                    Count = 0,
                    IsAvailable = false
                };
            Cupons.Add(surpriseCupon);
        }
        selectedCuponIndex = Cupons.Count > 0 ? Cupons[0].Index : "";
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        Navigation.RegisterLocationChangingHandler((args) =>
        {
            IsRunning = false;
            return ValueTask.CompletedTask;
        });
    }

    private void OnChange(ChangeEventArgs args)
    {
        if (!IsRunning)
        {
            IsRunning = true;
            Task.Run(CheckCupon);
        }
        else
        {
            IsRunning = false;
        }
    }

    private async Task CheckCupon()
    {
        while (IsRunning)
        {
            await Task.Delay(500);
            var cupon = await api.GetSurpriseCuponCountAsync(selectedCuponIndex);
            ProcessTexts = new List<string>(10);
            if (cupon.IsAvailable)
            {
                ProcessTexts.Add($"[{DateTime.Now:hh:mm:ss.ff}] " +
                $"[{cupon.Title}] : " +
                $"<span class='count' style='color:lawngreen;'>{cupon.Count}</span>");
            }
            else
            {
                ProcessTexts.Add($"[{DateTime.Now:hh:mm:ss.ff}] " +
                $"[{cupon.Title}] : " +
                $"<span class='count'>{cupon.Count}</span>");
            }
            await InvokeAsync(async () =>
            {
                StateHasChanged();
                await Runtime.InvokeVoidAsync("scrollBottom", "speed-cupon-article");
            });
        }
    }
}