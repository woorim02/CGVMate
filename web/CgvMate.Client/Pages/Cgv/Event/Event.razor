@using CgvMate.Services
@attribute [Route(Constants.event_)]
@inject NavigationManager Navigation
@inject CgvMateApi api

<PageTitle>CGV 이벤트 목록</PageTitle>
<HeadContent>
    <meta name="keywords" content="CGV 이벤트"/>
    <meta name="description" content="CGV 이벤트 목록. 영화, 극장, 제휴 이벤트"/>
</HeadContent>

<article class="article">
    <header class="header">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <button class="nav-link active" @onclick="(args)=>ToggleNavItem(EventType.Special)" data-bs-toggle="tab"
                    type="button" role="tab" aria-selected="true">Special</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" @onclick="(args)=>ToggleNavItem(EventType.Movie)" data-bs-toggle="tab"
                    type="button" role="tab" aria-selected="false">영화</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" @onclick="(args)=>ToggleNavItem(EventType.Membership_Club)"
                    data-bs-toggle="tab" type="button" role="tab" aria-selected="false">멤버십/클럽</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" @onclick="(args)=>ToggleNavItem(EventType.Theater)" data-bs-toggle="tab"
                    type="button" role="tab" aria-selected="false">극장</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" @onclick="(args)=>ToggleNavItem(EventType.Affiliate)" data-bs-toggle="tab"
                    type="button" role="tab" aria-selected="false">제휴</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" @onclick="(args)=>ToggleNavItem(EventType.Past)" data-bs-toggle="tab"
                    type="button" role="tab" aria-selected="false">지난이벤트</button>
            </li>
        </ul>
        <div class="search-bar">
            <form class="search-form" onsubmit="return false;">
                <input class="event-input form-control" @onchange=SearchBar_OnChange placeholder="이벤트 검색">
                <button class="btn btn-outline-success cgv-gradient" type="button">검색</button>
            </form>
        </div>
    </header>
    <div class="container">
        <div class="wrap">
            @if (Events is not null)
            {
                @foreach (var item in Events)
                {
                    <a class="card" href="/cgv/event/@item.EventId" style="text-decoration-line:none;">
                        <img src="@item.ImageSource"/>
                        <div class="card-body">
                            <p class="card-title">@((MarkupString)item.EventName)</p>
                            @if (item.Period != "상시진행")
                            {
                                <p class="card-text">@($"{item.StartDate:MM/dd} ~ {item.EndDate:MM/dd}")</p>
                            }
                            else
                            {
                                <p class="card-text">상시진행</p>
                            }
                        </div>
                    </a>
                }
            }
        </div>
    </div>
</article>

@code {
    private List<EventInfo>? _events;// 프로퍼티용 리스트
    private List<EventInfo>? events// 검색용 수정된 프로퍼티
    {
        get => _events;
        set
        {
            foreach (var item in value)
            {
                if (item.EventName.Contains("선착순 무료 쿠폰"))
                {
                    item.EventName = item.EventName.Replace("선착순 무료 쿠폰", "서프라이즈 쿠폰");
                }
            }
            _events = value;
        }
    }
    private List<EventInfo>? Events; // 바인딩 프로퍼티


    protected override async Task OnInitializedAsync()
    {
        events = await api.GetEventListAsync(EventType.Special);
        Events = events;
        Console.WriteLine(events.Count);
    }

    private async void ToggleNavItem(EventType type)
    {
        events = await api.GetEventListAsync(type);
        Events = events;
        StateHasChanged();
    }

    private void SearchBar_OnChange(ChangeEventArgs args)
    {
        var text = args.Value as string;
        if (events is null)
            return;
        if (string.IsNullOrEmpty(text))
        {
            return;
        }
        Events = events.Where(x => x.EventName.ToLower().Trim().Contains(text.ToLower().Trim())).ToList();
        StateHasChanged();
    }

    private void Card_OnClicked(EventInfo info)
    {
        Navigation.NavigateTo($"https://m.cgv.co.kr/WebApp/EventNotiV4/EventDetailGeneralUnited.aspx?seq={info.EventId}");
    }
}