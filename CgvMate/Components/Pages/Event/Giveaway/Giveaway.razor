@attribute [Route(Constants.event_giveaway)]
@inject CgvService Service

<article class="article">
    <div class="header">
        <div class="title">
            <p>
                진행중인 경품 이벤트
                <strong>
                    @if (EventList is not null)
                    {
                        <span id="listcount">@EventList.Count</span>
                    }
                </strong>
                개
            </p>
        </div>
        <div class="search-bar">
            <form class="search-form" onsubmit="return false;">
                <input class="event-input form-control" @onchange=OnSearchBarChangeAsync placeholder="이벤트 검색">
                <button class="btn btn-outline-success cgv-gradient" type="button">검색</button>
            </form>
        </div>
    </div>

    <div class="body">
        <ul class="eventlist">
            @if (EventList is not null)
            {
                @foreach (var item in EventList)
                {
                    <li class="item" style="cursor:pointer;" onclick="location.href='event/giveaway/detail?eventIndex=@item.EventIndex'">
                        <div class="text-container">
                            <strong class="item-title">@item.Title</strong>
                            <span class="item-period">@item.Period</span>
                        </div>
                        <span class="item-dday">@item.DDay</span>
                    </li>
                }
            }
        </ul>
    </div>
</article>


@code {
    private List<GiveawayEvent>? eventList;
    private List<GiveawayEvent>? EventList;

    protected override async Task OnInitializedAsync()
    {
        EventList = await Service.Event.GetGiveawayEventsAsync();
        eventList = EventList;
    }

    private void OnSearchBarChangeAsync(ChangeEventArgs args)
    {
        var text = args.Value as string;
        if (eventList is null)
            return;
        if (string.IsNullOrEmpty(text))
        {
            return;
        }
        EventList = eventList.Where(x => x.Title.ToLower().Contains(text.ToLower())).ToList();
    }
}
